@model TicketManagement.Models.ViewModels.TicketsEditorialesViewModel
@{
    ViewBag.Title = "Index";
}


<style>
    .celColor {
        color: #0E041E;
        font-weight: bold;
    }

    .button-container {
        display: inline-block;
        position: relative;
    }

        .button-container .aa {
            position: absolute;
            top: -10%;
            right: 4%;
            border-radius: 1px;
            color: white;
            text-transform: uppercase;
            padding: 2px 1.5px;
        }

        .button-container .aaa {
            position: absolute;
            top: -10%;
            left: 4%;
            border-radius: 1px;
            color: white;
            text-transform: uppercase;
            padding: 2px 1.5px;
        }

    body {
        font-family: "Open Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", Helvetica, Arial, sans-serif;
    }

    #gridContainer {
        height: 620px;
    }

    .dx-datagrid-rowsview .dx-master-detail-row:not(.dx-datagrid-edit-form) > .dx-datagrid-group-space,
    .dx-datagrid-rowsview .dx-master-detail-row:not(.dx-datagrid-edit-form) .dx-master-detail-cell {
        background-color: white !important;
    }

    .dx-tabpanel-container {
        background-color: white !important;
    }

    .dx-form .dx-widget .dx-visibility-change-handler {
        background-color: white;
    }

    .dx-cell-focus-disabled .dx-master-detail-cell {
        background-color: white !important;
    }

    .form-container {
        padding: 20px;
    }

    .address-form label {
        font-weight: bold;
    }

    .cb-p {
        cursor: pointer;
    }

    .edit-i {
        cursor: pointer;
    }

    .cont-img {
        width: 40px;
        height: 40px;
        cursor: pointer;
    }

    .image-margin {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    #title-modal {
        text-align: center;
    }

    .a-si {
        cursor: pointer;
    }

    .dropdown {
        position: absolute !important;
    }

    .dropbtn {
        position: absolute;
        top: -17px;
    }

    .dropdown-content {
        display: none;
        position: absolute !important;
        background-color: #f1f1f1;
        min-width: 100px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
        top: 17px
    }

        .dropdown-content div {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

        .dropdown-content a:hover {
            background-color: #ddd;
        }

    .dropdown:hover .dropdown-content {
        display: block;
        position: fixed;
    }

    .popup-class-w {
        width: 100em !important;
    }

    .content-class-c {
        text-align: left !important;
    }

    .inp-date {
        line-height: 10px !important;
    }

    .dp-n {
        display: none;
    }

    .f-ac {
        min-width: 100%;
    }

    .lbl-img {
        cursor: pointer;
        margin-right: 10px;
    }

    .opc-img {
        display: flex !important;
        align-items: center;
        justify-content: center;
        padding: 3px !important;
    }

    .inv-ic-0 {
        display: none !important;
    }

    .a-opc-img {
        margin-left: 5px;
        margin-right: 5px;
    }

    .im-pr-0 {
        border: 2px solid #f7b522;
    }
    /*swichi style*/
    .switch {
        position: relative;
        display: inline-block;
        width: 25px;
        height: 12px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #878787;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 10px;
            width: 10px;
            left: -1px;
            bottom: 1px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #32B216;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(16px);
        -ms-transform: translateX(16px);
        transform: translateX(16px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }
    /*swichi style*/
    /*swichi style2*/
    .switch2 {
        pointer-events: none;
        position: relative;
        display: inline-block;
        width: 25px;
        height: 12px;
    }

        .switch2 input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider2 {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #C5C5C5;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider2:before {
            position: absolute;
            content: "";
            height: 10px;
            width: 10px;
            left: -1px;
            bottom: 1px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider2 {
        background-color: #C5C5C5;
    }

    input:focus + .slider2 {
        box-shadow: 0 0 1px #C5C5C5;
    }

    input:checked + .slider2:before {
        -webkit-transform: translateX(16px);
        -ms-transform: translateX(16px);
        transform: translateX(16px);
    }

    /* Rounded sliders */
    .slider2.round2 {
        border-radius: 34px;
    }

        .slider2.round2:before {
            border-radius: 50%;
        }
    /*swichi style2*/
    /*swichi style3*/
    .switch3 {
        position: relative;
        display: inline-block;
        width: 25px;
        height: 12px;
    }

        .switch3 input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider3 {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #c23516;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider3:before {
            position: absolute;
            content: "";
            height: 10px;
            width: 10px;
            left: -1px;
            bottom: 1px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider3 {
        background-color: #32B216;
    }

    input:focus + .slider3 {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider3:before {
        -webkit-transform: translateX(16px);
        -ms-transform: translateX(16px);
        transform: translateX(16px);
    }

    /* Rounded sliders */
    .slider3.round3 {
        border-radius: 34px;
    }

        .slider3.round3:before {
            border-radius: 50%;
        }
    /*swichi style3*/
    /*swichi style4*/
    .switch4 {
        pointer-events: none;
        position: relative;
        display: inline-block;
        width: 25px;
        height: 12px;
    }

        .switch4 input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider4 {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #878787;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider4:before {
            position: absolute;
            content: "";
            height: 10px;
            width: 10px;
            left: -1px;
            bottom: 1px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider4 {
        background-color: #32B216;
    }

    input:focus + .slider4 {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider4:before {
        -webkit-transform: translateX(16px);
        -ms-transform: translateX(16px);
        transform: translateX(16px);
    }

    /* Rounded sliders */
    .slider4.round4 {
        border-radius: 34px;
    }

        .slider4.round4:before {
            border-radius: 50%;
        }
    /*swichi style4*/

    #textFond {
        font-family: Arial;
        color: #DD4030;
        font-weight: bold;
    }

        #textFond:hover {
            text-decoration: underline;
        }

    .buttonCadena {
        line-height: 12px;
        width: 18px;
        font-size: 8pt;
        font-family: tahoma;
        margin-top: 1px;
        margin-right: 2px;
        position: absolute;
        top: 0;
        right: 0;
    }

    .buttonCadenaAling .iii {
        position: absolute;
        top: 25%;
        left: 90%;
        border-radius: 1px;
        text-transform: uppercase;
        /*padding: 2px 1.5px;*/
    }



    .dropdown-content {
        display: none;
        position: fixed;
        background-color: #f1f1f1;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 10;
        max-height: 250px;
    }



        .dropdown-content::-webkit-scrollbar-track {
            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
            background-color: #F5F5F5;
        }



        .dropdown-content::-webkit-scrollbar {
            width: 10px;
            background-color: #F5F5F5;
        }



        .dropdown-content::-webkit-scrollbar-thumb {
            background-color: #74bfeb;
            background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, .2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .2) 50%, rgba(255, 255, 255, .2) 75%, transparent 75%, transparent)
        }



        .dropdown-content div {
            color: black;
            padding: 15px 16px;
            text-decoration: none;
            display: block;
        }



        .dropdown-content a:hover {
            background-color: #ddd;
        }



    .dropdown:hover .dropdown-content {
        display: block;
        position: fixed;
        overflow-y: auto;
        z-index: 11;
    }

    button.btn.btn-default.dropbtn2 {
        margin-top: -17px;
        font-weight: 400;
    }
</style>



<div class="tabs-area-grid">

    <hr />
    <div class="panel panel-default" id="beautiful_grid_grouped">
        <div class="panel-heading">
            <div class="row">
                <h2 class="panel-title pull-left" style="margin-left:10px;">
                    <strong>Consola Tickets</strong>
                </h2>

            </div>
        </div>
        <div id="tabPanel"></div>
        <div id="gridContainer"></div>
        <div id="form-container">
            <div id="form"></div>
        </div>
    </div>
</div>




<script>

    $(function () {
        let NivelData = new Array();
        let AreasData = new Array();
        //let EditorialesData = new Array();


        //$.ajax({
        //    Type: 'GET',
        //    url: '/TicketsEditoriales/GETEditoriales',
        //    dataType: 'json',
        //    async: false,
        //    success: data => {
        //        //console.log(data);
        //        EditorialesData.push(data);
        //    },
        //}).then(data => {
        //    return NivelData;
        //});

        //Get Levels
        $.ajax({
            Type: 'GET',
            url: '/TicketsEditoriales/GetLevels',
            dataType: 'json',
            async: false,
            success: data => {
                //console.log(data);
                NivelData.push(data);
            },
        }).then(data => {
            return NivelData;
        });

        $.ajax({
            type: 'GET',
            url: '/TicketsEditoriales/GETAreas',
            async: false,
            dataType: 'json',
            success: data => {
                //console.log(data);
                AreasData.push(data);
            }
        }).then(data => {
            return AreasData;

        });


        $("#tabPanel").dxTabPanel({
            dataSource: [{
                title: "Tickets Editoriales",
                template: function () {
                    $("#gridContainer").dxDataGrid({
                        dataSource: new DevExpress.data.DataSource({
                            key: "id",
                            load: function () {
                                return $.getJSON("/TicketsEditoriales/GetDataTickets");
                            }
                        }),
                        showBorders: true,
                        paging: {
                            pageSize: 15
                        },
                        columnChooser: {
                            mode: "select",
                            width: 400,
                            height: 800,
                            allowSearch: true,
                            enabled: true
                        },
                        height: 1000,
                        pager: {
                            showPageSizeSelector: true,
                            allowedPageSizes: [15, 30, 50, 100],
                            showInfo: true
                        },
                        remoteOperations: false,
                        filterRow: {
                            visible: true,
                            applyFilter: "auto"
                        },
                        groupPanel: {
                            visible: true
                        },
                        searchPanel: {
                            visible: true,
                            width: 240,
                            placeholder: "Buscar..."
                        },
                        filterRow: {
                            visible: true,
                            applyFilter: "auto"
                        },
                        editing: {
                            allowAdding: true
                        },
                        headerFilter: { visible: true },
                        showBorders: true,
                        allowColumnReordering: true,
                        allowColumnResizing: true,
                        onRowExpanding: function (e) {
                            e.component.collapseAll(-1);
                        },
                        columnChooser: {
                            enabled: true,
                            mode: "select"
                        },
                        sorting: {
                            mode: "multiple"
                        },
                        columns: [
                            {
                                dataField: "id",
                                width: 100,
                            },
                            {
                                dataField: "Desempeño",
                                caption: "Desempeño Horas",
                                width: 200,
                                dataType: "number",
                                format: "udefined",
                                allowGrouping: false,
                                cellTemplate: function (container, options) {
                                    //console.log(options)
                                    //console.log(options.data.TiempoEstimadoRespuesta);
                                    //console.log(options.data.TiempoRealRespuesta);

                                    $("<div/>").dxBullet({
                                        onIncidentOccurred: null,
                                        size: {
                                            width: 150,
                                            height: 35
                                        },
                                        margin: {
                                            top: 5,
                                            bottom: 0,
                                            left: 5
                                        },
                                        showTarget: false,
                                        showZeroLevel: true,
                                        value: options.data.TiempoEstimadoRespuesta,
                                        startScaleValue: 0,
                                        endScaleValue: 100,
                                        tooltip: {
                                            enabled: true,
                                            font: {
                                                size: 18
                                            },
                                            contentTemplate: `Horas Aproximadas: ${options.data.TiempoEstimadoRespuesta}`,
                                            paddingTopBottom: 2,
                                            color: "#ffffff",
                                            font: {
                                                color: "#000",
                                                opacity: 1,
                                                size: 12,
                                                width: 400
                                            },
                                            shadow: {
                                                blur: 2,
                                                color: "#000000",
                                                offsetX: 0,
                                                offsetY: 4,
                                                opacity: 0.4

                                            },
                                            zIndex: 5
                                        }
                                    }).appendTo(container);

                                    $("<div/>").dxBullet({
                                        onIncidentOccurred: null,
                                        size: {
                                            width: 150,
                                            height: 35
                                        },
                                        color: "#05c1ff",
                                        margin: {
                                            top: 5,
                                            bottom: 0,
                                            left: 5
                                        },
                                        showTarget: false,
                                        showZeroLevel: true,
                                        value: options.data.TiempoRealRespuesta,
                                        startScaleValue: 0,
                                        endScaleValue: 100,
                                        tooltip: {
                                            enabled: true,
                                            font: {
                                                size: 18
                                            },
                                            contentTemplate: `Horas Reales: ${options.data.TiempoRealRespuesta}`,
                                            paddingTopBottom: 2,
                                            color: "#ffffff",
                                            font: {
                                                color: "#000",
                                                opacity: 1,
                                                size: 12,
                                                width: 400
                                            },
                                            shadow: {
                                                blur: 2,
                                                color: "#000000",
                                                offsetX: 0,
                                                offsetY: 4,
                                                opacity: 0.4

                                            },
                                            zIndex: 5
                                        }
                                    }).appendTo(container);
                                }
                            },
                            {
                                dataField: "Maestro_EditorialesId",
                                width: 220,
                            },
                            {
                                dataField: "TicketDescripcion",
                                width: 200
                            },
                            {
                                dataField: "Updated_At",
                                width: 200,
                            },
                            {
                                dataField: "UserId",
                                width: 200,
                            },
                            {
                                dataField: "Nombre_Area",
                                width: 200,
                            },
                            {
                                dataField: "Rol_Usuario",
                                width: 200,
                            },
                            {
                                dataField: "Maestro_Orden_PrioridadId",
                                width: 200,
                                cellTemplate: function (container, options) {


                                    var r = $("<div class='dropdown-content'></div>");
                                    let Bgcolor = "";
                                    let nivel = "";
                                    let border = "";
                                    let textColor = "";
                                    switch (options.data.Maestro_Orden_PrioridadId) {
                                        case "Alto":
                                            Bgcolor = "#eb839f";
                                            border = "1px solid #ff0044";
                                            nivel = "Alto";
                                            textColor = "#000";
                                            break;
                                        case "Medio":
                                            Bgcolor = "#ffe4ab";
                                            border = "1px solid #ff7700";
                                            nivel = "Medio";
                                            textColor = "#000";
                                            break;
                                        case "Bajo":
                                            Bgcolor = "#91edc0";
                                            border = "1px solid #00b05a";
                                            nivel = "Bajo";
                                            textColor = "#000";
                                            break;

                                    }

                                    //console.log(NivelData[0]);

                                    var x = $("<div class='dropdown'>")
                                        .append(`<button class=" btn btn-default dropbtn2" id="btnEstatus" value="${nivel}" style="background-color: ${Bgcolor}; border: ${border}; height: 30px!important;"><label style="color: ${textColor} !important;" id="textEstatus">${nivel}</label></button>`)
                                        .append(r);
                                    //console.log(options);

                                    $.each(NivelData[0], function (key, value) {

                                        switch (value.Maestro_Orden_PrioridadId) {
                                            case "Alto":
                                                Bgcolor = "#eb839f";
                                                border = "1px solid #ff0044";
                                                nivel = "Alto";
                                                textColor = "#000";
                                                break;
                                            case "Medio":
                                                Bgcolor = "#ffe4ab";
                                                border = "1px solid #ff7700";
                                                nivel = "Medio";
                                                textColor = "#000";
                                                break;
                                            case "Bajo":
                                                Bgcolor = "#91edc0";
                                                border = "1px solid #00b05a";
                                                nivel = "Bajo";
                                                textColor = "#000";
                                                break;

                                        }
                                        //console.log(value.IdPrioridad);

                                        if (options.data.id) {

                                            //console.log(value.IdPrioridad);

                                            var c = $("<div>")
                                                .append(`<button class='btn btn-default dropbtn2' style='background-color: ${Bgcolor}; border: ${border}; height: 30px!important;'  onclick='UpdateNivel(${options.data.id},${value.IdPrioridad})'><label style=\"color: ${textColor}!important; \" id=\"textEstatus\">${nivel}</label></button>`)
                                                .appendTo(r);
                                        }
                                    });

                                    x.appendTo(container);
                                    return x;
                                }
                            },
                            {
                                caption: "Ticket Cerrado",
                                dataField: "IsClosed",
                                width: 200,
                                cellTemplate: function (container, options) {
                                    if (options.data.IsClosed == true) {
                                        $("<center><label  class='switch'><input id='" + options.data.IsClosed + "' class='cb-p' type='checkbox' onclick='IsClosed(\"" + options.data.id + "\", this)'  checked><span class='slider round'></span></label></center>")
                                            .appendTo(container);
                                    } else {
                                        $("<center><label  class='switch'><input id='" + options.data.IsClosed + "' class='cb-p' type='checkbox'onclick='IsClosed(\"" + options.data.id + "\", this)'  ><span class='slider round'></span></label></center>")
                                            .appendTo(container);
                                    }
                                    //console.log(options.data.CerrarTicketNegativo);
                                }
                            },
                            {
                                caption: "Ticket Cerrado Satisfactoriamente",
                                dataField: "IsClosed_Successfully",
                                width: 200,
                                cellTemplate: function (container, options) {
                                    if (options.data.IsClosed_Successfully == true) {
                                        $("<center><label  class='switch'><input id='" + options.data.IsClosed_Successfully + "' class='cb-p' type='checkbox' onclick='IsClosedSuccessfully(\"" + options.data.id + "\", this)' checked><span class='slider round'></span></label></center>")
                                            .appendTo(container);
                                    } else {
                                        $("<center><label  class='switch'><input id='" + options.data.IsClosed_Successfully + "' class='cb-p' type='checkbox' onclick='IsClosedSuccessfully(\"" + options.data.id + "\", this)' ><span class='slider round'></span></label></center>")
                                            .appendTo(container);
                                    }
                                    //console.log(options);
                                }
                            },
                            {
                                dataField: "FechaCierre",
                                width: 200,
                            },
                            {
                                dataField: "isticket_cancelled",
                                width: 200,
                                cellTemplate: function (container, options) {
                                    if (options.data.IsTicketCancelled == true) {
                                        $("<center><label  class='switch'><input id='" + options.data.IsTicketCancelled + "' class='cb-p' type='checkbox' onclick='IsTicketCancelled(\"" + options.data.id + "\", this)' checked><span class='slider round'></span></label></center>")
                                            .appendTo(container);
                                    } else {
                                        $("<center><label  class='switch'><input id='" + options.data.IsTicketCancelled + "' class='cb-p' type='checkbox' onclick='IsTicketCancelled(\"" + options.data.id + "\", this)' ><span class='slider round'></span></label></center>")
                                            .appendTo(container);
                                    }
                                    //console.log(options);
                                }
                            },
                            {
                                dataField: "Dictamen",
                                width: 200,
                            },
                            {
                                dataField: "Reporte",
                                width: 200,
                            }

                        ],
                        masterDetail: {
                            enabled: true,
                            template: masterDetailTemplate
                        },


                    })
                }
            }]
        })
    });


    function UpdateNivel(ordenId, idPrioridad) {
        $.ajax({
            type: "POST",
            url: "/TicketsEditoriales/UPDATEPrincipal",
            data: { ordenId, idPrioridad }
        }).done(function (data) {
            $("#gridContainer").dxDataGrid("instance").refresh();
            if (data) {
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    title: 'Enhorabuena!',
                    text: 'Registro editado correctamente.',
                    showConfirmButton: false,
                    timer: 1500
                })
            }
            else {
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    title: 'Enhorabuena!',
                    text: 'No se edito correctamente',
                    showConfirmButton: false,
                    timer: 1500
                })
            }
        })

    }

    function UpdateEditorial(ordenId, idEditorial) {
        console.log('Editando' + idEditorial);

        $.ajax({
            type: "POST",
            url: "/TicketsEditoriales/UPDATEEditorial",
            data: { ordenId, idEditorial }
        }).done(function (data) {
            $("#gridContainer").dxDataGrid("instance").refresh();
            if (data) {
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    title: 'Enhorabuena!',
                    text: 'Registro editado correctamente.',
                    showConfirmButton: false,
                    timer: 1500
                })
            }
            else {
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    title: 'Enhorabuena!',
                    text: 'No se edito correctamente',
                    showConfirmButton: false,
                    timer: 1500
                })
            }
        })

    }

    function IsClosed(ordenId, check) {

        //console.log("Editando" + ordenId);
        //console.log(check.checked);
        let data = { ordenId: ordenId, isClosed: check.checked };
        $.ajax({
            type: "POST",
            url: "/TicketsEditoriales/UpdateIsClosed",
            data: data

        }).done(function (data) {
            $("#gridContainer").dxDataGrid("instance").refresh();
            if (data) {
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    text: 'Registro editado correctamente.',
                    showConfirmButton: false,
                    timer: 1500
                })
            }
            else {
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    text: 'No se edito correctamente',
                    showConfirmButton: false,
                    timer: 1500
                })
            }
        });

    }
    function IsClosedSuccessfully(ordenId, check) {

        //console.log("Editando" + ordenId);
        //console.log(check.checked);
        let data = { ordenId: ordenId, isClosedSuccess: check.checked };
        $.ajax({
            type: "POST",
            url: "/TicketsEditoriales/UpdateIsClosedSuccessfully",
            data: data

        }).done(function (data) {
            $("#gridContainer").dxDataGrid("instance").refresh();
            if (data) {
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    text: 'Registro editado correctamente.',
                    showConfirmButton: false,
                    timer: 1500
                })
            }
            else {
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    text: 'No se edito correctamente',
                    showConfirmButton: false,
                    timer: 1500
                })
            }
        })
    }
    function IsTicketCancelled(ordenId, check) {

        //console.log("Editando" + ordenId);
        //console.log(check.checked);
        let data = { ordenId: ordenId, isTicketClosed: check.checked };
        $.ajax({
            type: "POST",
            url: "/TicketsEditoriales/UpdateIsTicketCancelled",
            data: data

        }).done(function (data) {
            $("#gridContainer").dxDataGrid("instance").refresh();
            if (data) {
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    text: 'Registro editado correctamente.',
                    showConfirmButton: false,
                    timer: 1500
                })
            }
            else {
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    text: 'No se edito correctamente',
                    showConfirmButton: false,
                    timer: 1500
                })
            }
        })


    }

    function masterDetailTemplate(_, masterDetailOptions) {

        //console.log(masterDetailOptions);

        return $("<div style='-webkit-box-shadow: 0px 0px 13px 0px rgba(68,68,68,0.82); box-shadow: 0px 0px 13px 0px rgba(68, 68, 68, 0.82);'>").dxTabPanel({
            items: [
                {
                    title: "Incidencias",
                    template: IncidenciasGridTemplate(masterDetailOptions.data)
                }
            ]
        });
    }
    //version pivot
    function IncidenciasMasterDetails(masterDetailData) {
        //var dataOrdenInc = $.getJSON("/TicketsEditoriales/GetDataTicketInc?OrdenId=" + masterDetailData.OrdenId);
        //console.log(dataOrdenInc);
        return function () {
            return $("<div id='pivotGridContainer'>").dxPivotGrid({
                dataSource: new DevExpress.data.PivotGridDataSource({
                    load: function () {
                        var dataOrdenInc = $.getJSON("/TicketsEditoriales/GetDataTicketInc?OrdenId=" + masterDetailData.OrdenId);
                        //console.log(dataOrdenInc);
                        return dataOrdenInc;
                    }
                }),
                allowExpandAll: true,
                showRowTotals: false,
                showRowGrandTotals: false,
                showColumnGrandTotals: false,
                showColumnTotals: false,
                export: {
                    enabled: true
                },
                fields: [
                    {
                        dataField: "Incidencia",
                        area: "row",
                    },
                    {
                        dataField: "Area",
                        area: "row",
                    },
                    {
                        dataField: "ResponsableArea",
                        area: "row",
                    },
                    //{
                    //    dataField: "Arhivo",
                    //    width: 150,
                    //    area: "column"
                    //}
                    , {
                        dataFieldArea: "Observaciones",
                        area: "column",
                        //customizeText: function (cellInfo) {
                        //    return cellInfo.value + "$";
                        //}

                    }],
                //dataSource: {
                //    fields: [{
                //        caption: "Incidencia",
                //        width: 120,
                //        dataField: "Incidencia",
                //        area: "row"
                //    }, {
                //        caption: "Area",
                //            dataField: "Area",
                //        width: 150,
                //        area: "row",
                //        //selector: function (data) {
                //        //    return data.Incidencia + " (" + data.Area + ")";
                //        //}
                //    }, {
                //        dataField: "Observaciones",
                //        dataType: "Observaciones",
                //        area: "column"
                //    }, {
                //        caption: "Arhivo",
                //        dataField: "amArhivoount",
                //        area: "column"
                //    }],
                //    store: dataOrdenInc
                //}
            })

        }

    }
    //version grid
    function IncidenciasGridTemplate(masterDetailData) {
        return function () {
            return $("<div id=\"IncidenciasGrid\">").dxDataGrid({
                dataSource: new DevExpress.data.DataSource({
                    key: "IdIncidencia",
                    load: function () {
                        var datos = $.getJSON("/TicketsEditoriales/GetDataTicketInc?OrdenId=" + masterDetailData.id);
                        //console.log(datos);
                        return datos;
                    },
                    update: function (key, values) {
                        data = { IdIncidencia: key, Comentario: values.Observaciones }
                        console.log(values.Observaciones);
                        console.log(key);
                        return $.ajax({
                            url: "/TicketsEditoriales/EditCommentByIdSeguimiento",
                            method: "POST",
                            data: data
                        })
                    },
                    remove: function (key) {
                        return $.ajax({
                            url: "/TicketsEditoriales/DeleteSeguimiento",
                            method: "POST",
                            data: { IdSeguimiento: key }
                        })
                    },
                }),
                paging: {
                    pageSize: 1000
                },
                height: 1200,
                allowColumnReordering: true,
                groupPanel: {
                    visible: true
                },
                grouping: {
                    autoExpandAll: true,
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [300, 400],
                    showInfo: true
                },
                filterRow: {
                    visible: true,
                    applyFilter: "auto"
                },
                groupPanel: {
                    visible: true,
                },
                searchPanel: {
                    visible: true,
                    width: 240,
                    placeholder: "Buscar..."
                },
                filterRow: {
                    visible: true,
                    applyFilter: "auto"
                },
                editing: {
                    mode: "cell",
                    allowUpdating: true,
                    allowDeleting: true,
                    //confirmDelete: false,
                    ConfirmUpdate: false,
                }, 
                headerFilter: { visible: true },
                showBorders: true,
                columnsAutoWidth: true,
                allowColumnReordering: true,
                allowColumnResizing: true,
                onRowExpanding: function (e) {
                    e.component.collapseAll(-1);
                },
                columnChooser: {
                    enabled: true,
                    mode: "select"
                },
                sorting: {
                    mode: "multiple"
                },
                columns: [
                    {
                        dataField: "Incidencia",
                        caption: "Incidencia",
                        groupIndex: 0,
                        width: 300,
                        allowEditing: false
                    },
                    {
                        dataField: "Area",
                        caption: "Area",
                        groupIndex: 1,
                        width: 300,
                        allowEditing: false
                    },
                    {
                        dataField: "ResponsableArea",
                        caption: "Responsable de Area",
                        //groupIndex: 2,
                        width: 300,
                        allowEditing: false
                    },
                    {
                        dataField: "Observaciones",
                        caption: "Observaciones",
                        width: 350,
                        validationRules: [{ type: "required" }]
                    },
                    {
                        dataField: "NumImagenes",
                        caption: "Imagenes",
                        width: 150,
                        allowEditing: false,
                        cellTemplate: function (container, options) {
                            
                            let Edicion = 0;
                            let Id = options.data.IdIncidencia;
                            console.log(Id);
                            let Item = "INC";
                            //console.log(options.data.NumImagenes);
                            if (options.data.NumImagenes != 0) {
                                console.log('Tiene imagenes');
                                var x = $("<a onclick='OpenImage(\"" + Edicion + "^" + Id + "^" + Item + "\",\"" + options.data.NumImagenes + "\")'>&emsp;")
                                    .append("<i class='fa fa-picture-o fa-2x lbl-img' style='color: rgb(40, 180, 99, 2 )' data-toggle='tooltip' title='Visualizar Imagenes'></i>")
                                    .appendTo(container);

                                x.appendTo(container);
                            } else {
                                //console.log('Tiene imagenes');
                                var x = $("<a onclick='OpenImage(\"" + Edicion + "^" + Id + "^" + Item + "\",\"" + options.data.NumImagenes + "\")'>&emsp;")
                                    .append("<i class='fa fa-picture-o fa-2x lbl-img' style='color: black' data-toggle='tooltip' title='Cargar Imagenes'></i>")
                                    .appendTo(container);

                                x.appendTo(container);
                            }
                        }
                    }

                ],
                onCellClick:
                    function (e) {
                        console.log(e);
                    }, 
                onEditorPreparing: function (e) {
                    //if (e.dataField === "Observaciones" ) {
                    //    console.log(e.dataField);
                    //    //console.log(e.row.data.IdIncidencia);
                    //    //e.cancel = true;
                    //}
                },
                onRowUpdated: function (e) {
                    console.log("RowUpdated");
                    if (e.dataField === "Observaciones") {
                    }
                },
                //onToolbarPreparing: function (e) {

                //    //AGREGAR MASIVO
                //    e.toolbarOptions.items.unshift({
                //        location: "after",
                //        widget: "dxButton",
                //        template: function () {
                //            //if (UserRoles[0].authorizeProductoyCadena || UserRoles[0].admin) {
                //            return $("<a class='editarProducto-span' style='cursor: pointer' onclick='updateSelectRoles(\"" + masterDetailData.UserId + "\")' data-toggle='tooltip'>")
                //                .append("<i class='fa fa-check-circle-o fa-lg myIcon' style='color:#32B216'></i>")
                //            //}
                //        }
                //    });
                //    //ELIMINAR MASIVO
                //    e.toolbarOptions.items.unshift({
                //        location: "after",
                //        widget: "dxButton",
                //        template: function () {
                //            //AutorizarCadenas
                //            //if (UserRoles[0].authorizeProductoyCadena || UserRoles[0].admin) {
                //            return $("<a class='editarProducto-span' style='cursor: pointer' onclick='DeleteSelectRoles(\"" + masterDetailData.UserId + "\")' data-toggle='tooltip'>")
                //                .append("<i class='fa fa-times fa-lg' style='color: #c23516'></i>")
                //            //}
                //        }
                //    });
                //},
            });

        };

    }

        function OpenImage(data) {
            let datos = data;
            let Data1 = data.split("^");
            //console.log("datos open image "+ Data1);
            //let IdOrden = Data1[0];
            let IdIncidencia = { IdIncidencia: Data1[1] };
            $.post("/TicketsEditoriales/GetImages/", IdIncidencia).done(function (data) {
                //console.log(data);
                Swal.fire({
                    title: '<strong>Archivos</strong>',
                    html:
                        "<div class='alert alert' role='alert'>" +

                        "<i id='descargarImages' style='color: rgb(46, 134, 193, 2); cursor: pointer;' class='fa fa-download fa-3x' onclick='downloadImg(\"" + Data1[1] + "\")' aria-hidden='true'></i>&emsp;" +
                        "&emsp;<i id='addImages'  style='color: rgb(35, 155, 86, 2); cursor: pointer;' class='fa fa-upload fa-3x' onclick='AddImage(\"" + Data1[1] + "\", \"" + Data1[2] + "\", \"" + datos + "\")'  aria-hidden='true'></i>" +

                        "<hr/></div>" +
                        "<div class='row'>" +
                        "<div id='img'></div><br/>" +
                        "</div>",
                    showCloseButton: true,
                    width: 700,
                    showCancelButton: false,
                    focusConfirm: false,
                    confirmButtonText: 'Ok'
                })
                //console.log(data.length);
                if (data.length == 0) {
                    $('#descargarImages').hide()
                    let result = CargaDinamica(Data1[1], "Edit", "IncidenciasGrid", "/TicketsEditoriales/GetSeguimientoDetalle?id=" + Data1[1]);
                    console.log(result);
                } else if (data.length == 1) {
                    let result = CargaDinamica(Data1[1], "Edit", "IncidenciasGrid", "/TicketsEditoriales/GetSeguimientoDetalle?id=" + Data1[1]);
                } else if (data.length >= 1) {
                    $('#descargarImages').show()
                }
                for (var i = 0; data.length > i; ++i) {
                    let dataName = data[i].Imagen;
                    let format = dataName.split(".");
                    //console.log(dataName.split("."));
                    //console.log(data[i].Imagen);    
                    if (format[1] == "png" || format[1] == "jpg" || format[1] == "jpeg" || format[1] == "gif") {
                        //console.log(data[i].Imagen);
                        $("#img").append(
                            "<div style='padding-bottom:10px' class='col-md-2 button-container'> <a data - toggle='modal' data - target='#Modal_Image' onclick = 'OpenImageSweetAlert(\"" + data[i].Imagen + "\", \"" + datos + "\")' > <img class='a-si' src='" + data[i].Imagen + "' style='width: 80px' /></a > " +
                            "<a class='a-opc-img aa' onclick='DeleteImageByProductId(\"" + Data1[1]+ "\",\"" + data[i].Imagen + "\", \"" + datos + "\")'><i class='fa fa-times fa-2x edit-i' style='color: #c23516' data-toggle='tooltip' title='Eliminar imagen'></i></a>" +
                            "<a class='a-opc-img aaa'  href='" + data[i].Imagen + "' download><i class='fa fa-cloud-download fa-2x edit-i' style='color: #1375D6' data-toggle='tooltip' title='Descargar imagen'></i></a></div>"
                        );
                    } else if (format[1] == "pdf" || format[1] == "pdef") {
                        $("#img").append(
                            "<div style='padding-bottom:10px' class='col-md-2 button-container'> <a data - toggle='modal' data - target='#Modal_Image' onclick = 'OpenPdfSweetAlert(\"" + data[i].Imagen + "\", \"" + datos + "\")' > <img class='a-si' src='https://www.flaticon.es/svg/static/icons/svg/337/337946.svg' style='width: 80px' /></a > " +
                            "<a class='a-opc-img aa' onclick='DeleteImageByProductId(\"" + Data1[1] + "\",\"" + data[i].Imagen + "\", \"" + datos + "\")'><i class='fa fa-times fa-2x edit-i' style='color: #c23516' data-toggle='tooltip' title='Eliminar imagen'></i></a>" +
                            "<a class='a-opc-img aaa'   href='" + data[i].Imagen + "' download><i class='fa fa-cloud-download fa-2x edit-i' style='color: #1375D6' data-toggle='tooltip' title='descargar imagen'></i></a></div>"

                        );
                    }
                }
            }).fail(function () {

            });
        }

    function AddImage(id, item, datos) {
        console.log("Id "+id + " valor inc : "+item+" numImagenes: "+ datos);
            let Subir = false;
            Swal.fire({
                title: '<strong>Subir Archivos</strong>',
                html: '<span class="note"> <strong>Tamaño maximo permitido:</strong> <span>4 MB</span>.</span>' + '<span class="note"><strong>  Formato permitido: </strong><span>.jpg, .jpeg, .gif, .png, .pdf, .csv y .zip</span>.</span><hr/>' +
                    "<div id='SubirArchivos'></div>"+
                    "<center><div id='gallery' style='width:250px'></div></center>",
                showCloseButton: true,
                width: 700,
                showCancelButton: false,
                focusConfirm: false,
                confirmButtonText:
                    'Cerrar',
                willOpen: () => {
                    var datas = { id: id, datos: item };
                    var imgSrc = [];
                    $("#SubirArchivos").dxFileUploader({
                        multiple: true,
                        uploadMode: "useButtons",
                        uploadUrl: '@Url.Content("~/TicketsEditoriales/SaveImagesBySeguimiento")',
                        maxFileSize: 4000000,
                        selectButtonText: "Selecciónar Imagen",
                        readyToUploadMessage: "Listo para subir archivo",
                        uploadedMessage: "Archivo cargado correctamente",
                        uploadButtonText: "Cargar Todo",
                        uploadFailedMessage: "Error al subir archivo intente más tarde",
                        invalidMaxFileSizeMessage: "El archivo exede el tamaño permitido",
                        invalidFileExtensionMessage: "Formato no valido",
                        labelText: "O SOLTAR IMAGEN AQUÍ",
                        onValueChanged: function (e) {
                            onUPloaded($("#SubirArchivos").dxFileUploader("option", "value").length);
                            imgSrc = [];
                            $.each(e.value, function (_, value) {
                                var fileUrl = URL.createObjectURL(value);
                                if (value.type == "image/jpeg" || value.type == "image/jpg" || value.type == "image/gif" || value.type == "image/png") {
                                imgSrc.push({ imageSrc: fileUrl, name: value.name });
                                }
                            });
                            $("#gallery").dxGallery({
                                dataSource: imgSrc,
                                height: 350,
                                loop: true,
                                slideshowDelay: 2000,
                                showNavButtons: true,
                                showIndicator: true
                            }).dxGallery("instance");
                            var url = e.component.option("uploadUrl");
                            url = updateQueryStringParameter(url, "datos", datas.id + "/" + datas.dato );
                            e.component.option("uploadUrl", url);
                        },
                        onUploaded: function(e) {
                            Subir = true;
                        }
                    });

                    function updateQueryStringParameter(uri, key, value) {
                        var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
                        var separator = uri.indexOf('?') !== -1 ? "&" : "?";
                        if (uri.match(re)) {
                            return uri.replace(re, '$1' + key + "=" + value + '$2');
                        }
                        else {
                            return uri + separator + key + "=" + value;
                        }
                    }

                   click();
                },
                preConfirm: (data) => {
                    console.log(data);
                    var key = dataGrid.keyOf(data); 
                    if (Subir === true) {
                        console.log(id);
                        let Update = CargaDinamica(id, "Edit", "IncidenciasGrid", "/TicketsEditoriales/GetSeguimientoDetalle?id=" + id);
                        if (Update) {
                            console.log("RECARGA" + Update);
                        } else {

                        }
                        Subir = false;
                    }
                    OpenImage(datos);
                },
                allowOutsideClick: function () {
                    if (Subir === true) {
                        let Update = CargaDinamica(id, "Edit", "IncidenciasGrid", "/TicketsEditoriales/GetSeguimientoDetalle?id=" + id);
                        if (Update) {
                            console.log("RECARGA" + Update);
                        } else {

                        }
                        Subir = false;
                    }
                    OpenImage(datos)
                },
                willClose: () => {
                    if (Subir === true) {
                        let Update = CargaDinamica(id, "Edit", "IncidenciasGrid", "/TicketsEditoriales/GetSeguimientoDetalle?id=" + id);
                        if (Update) {
                            console.log("RECARGA" + Update);
                        } else {

                        }
                        Subir = false;
                    }
                    OpenImage(datos);
                }
            })
        }

        function OpenImageSweetAlert(path, datos) {
            let Name = path.split('/');
            Swal.fire({
                html:
                    '<p><strong>' + Name[3] + '</strong></p>',
                imageUrl: path,
                width: 800,
                showCloseButton: true,
                showCancelButton: false,
                focusConfirm: false,
                preConfirm: (login) => {
                    OpenImage(datos);
                },
                allowOutsideClick: () => !OpenImage(datos),
                willClose: () => {
                    OpenImage(datos);
                }
            })
        }

        function OpenPdfSweetAlert(path, datos) {
            let Name = path.split('/');
            Swal.fire({
                title: '',
                html:
                    '<iframe style="width:80%; height:650px" src="' + path + '" frameborder="0"></iframe>' +
                    '<p><strong>' + Name[3] + '</strong></p>',
                showCancelButton: false,
                showCloseButton: true,
                width: 900 + 'px',
                height: 800 + 'px',
                confirmButtonText: 'Cerrar',
                showLoaderOnConfirm: true,
                preConfirm: (login) => {
                    OpenImage(datos);
                },
                allowOutsideClick: () => !OpenImage(datos),
                willClose: () => {
                    OpenImage(datos);
                }
            })

        }

        function downloadImg(img) {
            let data = { Id: img };
            $.post("/TicketsEditoriales/PrepareDownloadFile/", data).done(function (data) {
                if (data === '1') {
                    window.location = ("/TicketsEditoriales/DownloadFile/");
                } else {

                }
            }).fail(function () {

            });
        }
        //Delete Imagen por ID del Producto
        function DeleteImageByProductId(id, path, datos) {

            var data = { Path: path };
            fetch('/TicketsEditoriales/DeleteImage', {
                method: 'POST', body: JSON.stringify(data), headers: { 'Content-Type': 'application/json' }
            })
                .then(x => {
                    return x.json();
                })
                .then(data => {
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: 'Enhorabuena!',
                        text: 'Archivo eliminado satisfactoriamente',
                        showConfirmButton: false,
                        timer: 1200,
                        preConfirm: (login) => {
                            OpenImage(datos);
                        },
                        allowOutsideClick: function () {
                            
                            let Update = CargaDinamica(id, "Edit", "IncidenciasGrid", "/TicketsEditoriales/GetSeguimientoDetalle?id=" + id);
                            
                                if (Update) {
                                    console.log("RECARGA");
                                } else {

                                }
                                Subir = false;

                            OpenImage(datos);
                        },
                        willClose: () => {
                            let Update = CargaDinamica(id, "Edit", "IncidenciasGrid", "/TicketsEditoriales/GetSeguimientoDetalle?id=" + id);
                            if (Update) {
                                console.log("RECARGA");
                            } else {

                            }
                            OpenImage(datos);
                        }
                    }).then(function () {

                        let Update = CargaDinamica(id, "Edit", "IncidenciasGrid", "/TicketsEditoriales/GetSeguimientoDetalle?id=" + id);
                            if (Update) {
                                console.log("RECARGA");
                            } else {

                            }
                            Subir = false;

                        OpenImage(datos);
                    });
                })
                .catch(() => {
                    Swal.fire({
                        position: 'center',
                        icon: 'warning',
                        title: 'Error!',
                        text: 'Error al eliminar imagen',
                        showConfirmButton: false,
                        timer: 1200
                    });
                })
        }

        function DownloadImageByProductId(path, datos, id) {
            window.open(path, '', 'height=400,width=400');
        }

        function click() {
            var fileUploader = $('#SubirArchivos').dxFileUploader('instance');
            fileUploader._isCustomClickEvent = true;
            fileUploader._$fileInput.click();
            console.log("ok archivo cargado");
        }

        function onUploadProgress(e) {
            console.log("Listo");
            //$("#gridContainer").dxDataGrid("instance").refresh();
        }

        function onUPloaded(dato) {
            //console.log("Listo");
            //var files = $("#SubirArchivos").dxFileUploader("option", "value");
            //console.log("files");
            //console.log(dato);
        }

        function CargaDinamica(Id, option, grid, url) {
            let Result = true;
            let ds = $("#" + grid).dxDataGrid("getDataSource");
            let Rep = $("#" + grid).dxDataGrid("instance");
            console.log(Rep);
            console.log(grid);
            console.log(Id);
            let RowIndex = Rep.getRowIndexByKey(Number(Id));
            console.log('En carga dinamica : ' + RowIndex);
            console.log(url);

            let ID = { id: Id };
            if (option !== "delete") {
                $.getJSON(url, ID)
                    .done(function (result) {
                        console.log('result[0]');
                        console.log(result[0]);
                        //console.log(RowIndex);
                        if (option === "Edit") {
                            ds.store().push([{ type: "update", key: Number(Id), data: result[0] }]);
                            console.log("En update: " + Number(Id))
                            Rep.repaintRows([RowIndex]);
                        } else if (option === "Add") {
                            ds.store().push([{ type: "insert", data: result[0], index: 0 }]);
                            Rep.repaintRows([RowIndex]);
                        } else if (option === "delete") {
                            ds.store().push([{ type: "remove", key: Number(Id) }]);
                            Rep.repaint();
                        }

                    }).fail(function (err) {
                        Result = false;
                    });
            } else {
                ds.store().push([{ type: "remove", key: Number(Id) }]);
                Rep.repaint();
            }
            return Result;
        }
</script>
